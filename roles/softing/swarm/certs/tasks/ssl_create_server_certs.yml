---

# CSR Key

- become: no
  connection: local
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.key.pem"
  register: host_key

- name: "Swarm::Certs | Create host CSR signing key"
  become: no
  connection: local
  delegate_to: localhost
  openssl_privatekey:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.key.pem"
  when: not host_key.stat.exists

- become: no
  connection: local
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.key.pem"
  register: host_key

## CSR Request

- become: no
  connection: local
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.csr.pem"
  register: host_csr

- name: SSL | Create the CSR for the host
  become: no
  connection: local
  delegate_to: localhost
  openssl_csr:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.csr.pem"
    privatekey_path: "{{ host_key.stat.path }}"
    common_name: "{{ swarm_certs_domain }}"
    subject:
      CN: "{{ item }}.{{ swarm_certs_domain }}"
    extended_key_usage:
      - serverAuth
    subject_alt_name: "{{ my_subject_alt_names | join(',') }}"
  when: not host_csr.stat.exists

- become: no
  connection: local
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.csr.pem"
  register: host_csr

# SSL Cert

- name: "Swarm::Certs | Sign the CSR for the host"
  become: no
  connection: local
  delegate_to: localhost
  community.crypto.x509_certificate:
    path: "{{ swarm_certs_folder }}/servers/{{ item }}.{{ swarm_certs_domain }}.crt.pem"
    csr_path: "{{ host_csr.stat.path }}"
    provider: ownca
    ownca_path: "{{ ca_crt.stat.path }}"
    ownca_privatekey_path: "{{ ca_key.stat.path }}"

